/*
* Adama Platform and Language
* Copyright (C) 2021 - 2023 by Adama Platform Initiative, LLC
* 
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU Affero General Public License as published
* by the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
* 
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU Affero General Public License for more details.
* 
* You should have received a copy of the GNU Affero General Public License
* along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/
package org.adamalang.translator;

import org.junit.Test;

public class GeneratedStdLibExtTests extends GeneratedBase {
  private String cached_SignAndHexWithGCD_1 = null;
  private String get_SignAndHexWithGCD_1() {
    if (cached_SignAndHexWithGCD_1 != null) {
      return cached_SignAndHexWithGCD_1;
    }
    cached_SignAndHexWithGCD_1 = generateTestOutput(true, "SignAndHexWithGCD_1", "./test_code/StdLibExt_SignAndHexWithGCD_success.a");
    return cached_SignAndHexWithGCD_1;
  }

  @Test
  public void testSignAndHexWithGCDEmission() {
    assertEmissionGood(get_SignAndHexWithGCD_1());
  }

  @Test
  public void testSignAndHexWithGCDSuccess() {
    assertLivePass(get_SignAndHexWithGCD_1());
  }

  @Test
  public void testSignAndHexWithGCDNoFormatException() {
    assertNoFormatException(get_SignAndHexWithGCD_1());
  }

  @Test
  public void testSignAndHexWithGCDGoodWillHappy() {
    assertGoodWillHappy(get_SignAndHexWithGCD_1());
  }

  @Test
  public void testSignAndHexWithGCDExceptionFree() {
    assertExceptionFree(get_SignAndHexWithGCD_1());
  }

  @Test
  public void testSignAndHexWithGCDTODOFree() {
    assertTODOFree(get_SignAndHexWithGCD_1());
  }

  @Test
  public void stable_SignAndHexWithGCD_1() {
    String live = get_SignAndHexWithGCD_1();
    StringBuilder gold = new StringBuilder();
    gold.append("Path:StdLibExt_SignAndHexWithGCD_success.a");
    gold.append("\n--EMISSION-----------------------------------------");
    gold.append("\nEmission Success, Yay");
    gold.append("\n=FORMAT===================================================");
    gold.append("\npublic formula s0d = Math.sign(1.2);");
    gold.append("\npublic formula s1d = Math.sign(-1.2);");
    gold.append("\npublic formula s2d = Math.sign(0.0);");
    gold.append("\npublic formula s0i = Math.sign(1);");
    gold.append("\npublic formula s1i = Math.sign(-1);");
    gold.append("\npublic formula s2i = Math.sign(0);");
    gold.append("\npublic formula s0l = Math.sign(1L);");
    gold.append("\npublic formula s1l = Math.sign(-1L);");
    gold.append("\npublic formula s2l = Math.sign(0L);");
    gold.append("\npublic formula s0dm = Math.sign(@maybe(1.2));");
    gold.append("\npublic formula s1dm = Math.sign(@maybe(-1.2));");
    gold.append("\npublic formula s2dm = Math.sign(@maybe(0.0));");
    gold.append("\npublic formula s0im = Math.sign(@maybe(1));");
    gold.append("\npublic formula s1im = Math.sign(@maybe(-1));");
    gold.append("\npublic formula s2im = Math.sign(@maybe(0));");
    gold.append("\npublic formula s0lm = Math.sign(@maybe(1L));");
    gold.append("\npublic formula s1lm = Math.sign(@maybe(-1L));");
    gold.append("\npublic formula s2lm = Math.sign(@maybe(0L));");
    gold.append("\npublic formula sdmn = Math.sign(@maybe<double>);");
    gold.append("\npublic formula simn = Math.sign(@maybe<int>);");
    gold.append("\npublic formula slmn = Math.sign(@maybe<long>);");
    gold.append("\npublic formula gcd1 = Math.gcd(20, 50);");
    gold.append("\npublic formula gcd2 = Math.gcd(10, 13);");
    gold.append("\npublic formula gcd3 = Math.gcd(10, 40);");
    gold.append("\npublic formula gcd4 = Math.gcd(5, 25);");
    gold.append("\npublic formula h1 = (100).hexOf();");
    gold.append("\npublic formula h2 = (100L).hexOf();");
    gold.append("\npublic formula fh1 = \"42FF\".intFromHex();");
    gold.append("\npublic formula fh2 = \"42FF\".longFromHex();");
    gold.append("\npublic formula fh1b = \"42FFX\".intFromHex();");
    gold.append("\npublic formula fh2b = \"42FFX\".longFromHex();");
    gold.append("\npublic formula h1m = (@maybe(100)).hexOf();");
    gold.append("\npublic formula h2m = (@maybe(100L)).hexOf();");
    gold.append("\npublic formula fh1m = (@maybe(\"4269\")).intFromHex();");
    gold.append("\npublic formula fh2m = (@maybe(\"4269\")).longFromHex();");
    gold.append("\npublic formula fh1bm = (@maybe(\"4269X\")).intFromHex();");
    gold.append("\npublic formula fh2bm = (@maybe(\"4269X\")).longFromHex();");
    gold.append("\npublic formula h1mn = (@maybe<int>).hexOf();");
    gold.append("\npublic formula h2mn = (@maybe<long>).hexOf();");
    gold.append("\n");
    gold.append("\n==========================================================");
    gold.append("\n--ISSUES-------------------------------------------");
    gold.append("\n[]\"--JAVA---------------------------------------------");
    gold.append("\nimport org.adamalang.runtime.async.*;");
    gold.append("\nimport org.adamalang.runtime.contracts.*;");
    gold.append("\nimport org.adamalang.runtime.delta.*;");
    gold.append("\nimport org.adamalang.runtime.delta.secure.*;");
    gold.append("\nimport org.adamalang.runtime.exceptions.*;");
    gold.append("\nimport org.adamalang.runtime.graph.*;");
    gold.append("\nimport org.adamalang.runtime.index.*;");
    gold.append("\nimport org.adamalang.runtime.json.*;");
    gold.append("\nimport org.adamalang.runtime.natives.*;");
    gold.append("\nimport org.adamalang.runtime.natives.algo.*;");
    gold.append("\nimport org.adamalang.runtime.natives.lists.*;");
    gold.append("\nimport org.adamalang.runtime.ops.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.*;");
    gold.append("\nimport org.adamalang.runtime.reactives.tables.*;");
    gold.append("\nimport org.adamalang.runtime.remote.*;");
    gold.append("\nimport org.adamalang.runtime.stdlib.*;");
    gold.append("\nimport org.adamalang.runtime.sys.*;");
    gold.append("\nimport org.adamalang.runtime.sys.cron.*;");
    gold.append("\nimport org.adamalang.runtime.sys.web.*;");
    gold.append("\nimport org.adamalang.runtime.text.*;");
    gold.append("\nimport java.time.*;");
    gold.append("\nimport java.util.function.Consumer;");
    gold.append("\nimport java.util.function.Function;");
    gold.append("\nimport java.util.ArrayList;");
    gold.append("\nimport java.util.Comparator;");
    gold.append("\nimport java.util.HashMap;");
    gold.append("\nimport java.util.HashSet;");
    gold.append("\nimport java.util.Map;");
    gold.append("\nimport java.util.Set;");
    gold.append("\npublic class SignAndHexWithGCD_1 extends LivingDocument {");
    gold.append("\n  private final RxLazy<Integer> s0d;");
    gold.append("\n  private final RxLazy<Integer> s1d;");
    gold.append("\n  private final RxLazy<Integer> s2d;");
    gold.append("\n  private final RxLazy<Integer> s0i;");
    gold.append("\n  private final RxLazy<Integer> s1i;");
    gold.append("\n  private final RxLazy<Integer> s2i;");
    gold.append("\n  private final RxLazy<Integer> s0l;");
    gold.append("\n  private final RxLazy<Integer> s1l;");
    gold.append("\n  private final RxLazy<Integer> s2l;");
    gold.append("\n  private final RxLazy<NtMaybe<Integer>> s0dm;");
    gold.append("\n  private final RxLazy<NtMaybe<Integer>> s1dm;");
    gold.append("\n  private final RxLazy<NtMaybe<Integer>> s2dm;");
    gold.append("\n  private final RxLazy<NtMaybe<Integer>> s0im;");
    gold.append("\n  private final RxLazy<NtMaybe<Integer>> s1im;");
    gold.append("\n  private final RxLazy<NtMaybe<Integer>> s2im;");
    gold.append("\n  private final RxLazy<NtMaybe<Integer>> s0lm;");
    gold.append("\n  private final RxLazy<NtMaybe<Integer>> s1lm;");
    gold.append("\n  private final RxLazy<NtMaybe<Integer>> s2lm;");
    gold.append("\n  private final RxLazy<NtMaybe<Integer>> sdmn;");
    gold.append("\n  private final RxLazy<NtMaybe<Integer>> simn;");
    gold.append("\n  private final RxLazy<NtMaybe<Integer>> slmn;");
    gold.append("\n  private final RxLazy<Integer> gcd1;");
    gold.append("\n  private final RxLazy<Integer> gcd2;");
    gold.append("\n  private final RxLazy<Integer> gcd3;");
    gold.append("\n  private final RxLazy<Integer> gcd4;");
    gold.append("\n  private final RxLazy<String> h1;");
    gold.append("\n  private final RxLazy<String> h2;");
    gold.append("\n  private final RxLazy<NtMaybe<Integer>> fh1;");
    gold.append("\n  private final RxLazy<NtMaybe<Long>> fh2;");
    gold.append("\n  private final RxLazy<NtMaybe<Integer>> fh1b;");
    gold.append("\n  private final RxLazy<NtMaybe<Long>> fh2b;");
    gold.append("\n  private final RxLazy<NtMaybe<String>> h1m;");
    gold.append("\n  private final RxLazy<NtMaybe<String>> h2m;");
    gold.append("\n  private final RxLazy<NtMaybe<Integer>> fh1m;");
    gold.append("\n  private final RxLazy<NtMaybe<Long>> fh2m;");
    gold.append("\n  private final RxLazy<NtMaybe<Integer>> fh1bm;");
    gold.append("\n  private final RxLazy<NtMaybe<Long>> fh2bm;");
    gold.append("\n  private final RxLazy<NtMaybe<String>> h1mn;");
    gold.append("\n  private final RxLazy<NtMaybe<String>> h2mn;");
    gold.append("\n  @Override");
    gold.append("\n  public long __memory() {");
    gold.append("\n    long __sum = super.__memory();");
    gold.append("\n    __sum += s0d.__memory();");
    gold.append("\n    __sum += s1d.__memory();");
    gold.append("\n    __sum += s2d.__memory();");
    gold.append("\n    __sum += s0i.__memory();");
    gold.append("\n    __sum += s1i.__memory();");
    gold.append("\n    __sum += s2i.__memory();");
    gold.append("\n    __sum += s0l.__memory();");
    gold.append("\n    __sum += s1l.__memory();");
    gold.append("\n    __sum += s2l.__memory();");
    gold.append("\n    __sum += s0dm.__memory();");
    gold.append("\n    __sum += s1dm.__memory();");
    gold.append("\n    __sum += s2dm.__memory();");
    gold.append("\n    __sum += s0im.__memory();");
    gold.append("\n    __sum += s1im.__memory();");
    gold.append("\n    __sum += s2im.__memory();");
    gold.append("\n    __sum += s0lm.__memory();");
    gold.append("\n    __sum += s1lm.__memory();");
    gold.append("\n    __sum += s2lm.__memory();");
    gold.append("\n    __sum += sdmn.__memory();");
    gold.append("\n    __sum += simn.__memory();");
    gold.append("\n    __sum += slmn.__memory();");
    gold.append("\n    __sum += gcd1.__memory();");
    gold.append("\n    __sum += gcd2.__memory();");
    gold.append("\n    __sum += gcd3.__memory();");
    gold.append("\n    __sum += gcd4.__memory();");
    gold.append("\n    __sum += h1.__memory();");
    gold.append("\n    __sum += h2.__memory();");
    gold.append("\n    __sum += fh1.__memory();");
    gold.append("\n    __sum += fh2.__memory();");
    gold.append("\n    __sum += fh1b.__memory();");
    gold.append("\n    __sum += fh2b.__memory();");
    gold.append("\n    __sum += h1m.__memory();");
    gold.append("\n    __sum += h2m.__memory();");
    gold.append("\n    __sum += fh1m.__memory();");
    gold.append("\n    __sum += fh2m.__memory();");
    gold.append("\n    __sum += fh1bm.__memory();");
    gold.append("\n    __sum += fh2bm.__memory();");
    gold.append("\n    __sum += h1mn.__memory();");
    gold.append("\n    __sum += h2mn.__memory();");
    gold.append("\n    return __sum;");
    gold.append("\n  }");
    gold.append("\n  public SignAndHexWithGCD_1(DocumentMonitor __monitor) {");
    gold.append("\n    super(__monitor);");
    gold.append("\n    s0d = new RxLazy<Integer>(this, () -> (Integer)(LibMath.sign(1.2)), null);");
    gold.append("\n    s1d = new RxLazy<Integer>(this, () -> (Integer)(LibMath.sign(-1.2)), null);");
    gold.append("\n    s2d = new RxLazy<Integer>(this, () -> (Integer)(LibMath.sign(0.0)), null);");
    gold.append("\n    s0i = new RxLazy<Integer>(this, () -> (Integer)(LibMath.sign(1)), null);");
    gold.append("\n    s1i = new RxLazy<Integer>(this, () -> (Integer)(LibMath.sign(-1)), null);");
    gold.append("\n    s2i = new RxLazy<Integer>(this, () -> (Integer)(LibMath.sign(0)), null);");
    gold.append("\n    s0l = new RxLazy<Integer>(this, () -> (Integer)(LibMath.sign(1L)), null);");
    gold.append("\n    s1l = new RxLazy<Integer>(this, () -> (Integer)(LibMath.sign(-1L)), null);");
    gold.append("\n    s2l = new RxLazy<Integer>(this, () -> (Integer)(LibMath.sign(0L)), null);");
    gold.append("\n    s0dm = new RxLazy<NtMaybe<Integer>>(this, () -> (NtMaybe<Integer>)(LibMath.signD(new NtMaybe<Double>(1.2))), null);");
    gold.append("\n    s1dm = new RxLazy<NtMaybe<Integer>>(this, () -> (NtMaybe<Integer>)(LibMath.signD(new NtMaybe<Double>(-1.2))), null);");
    gold.append("\n    s2dm = new RxLazy<NtMaybe<Integer>>(this, () -> (NtMaybe<Integer>)(LibMath.signD(new NtMaybe<Double>(0.0))), null);");
    gold.append("\n    s0im = new RxLazy<NtMaybe<Integer>>(this, () -> (NtMaybe<Integer>)(LibMath.signI(new NtMaybe<Integer>(1))), null);");
    gold.append("\n    s1im = new RxLazy<NtMaybe<Integer>>(this, () -> (NtMaybe<Integer>)(LibMath.signI(new NtMaybe<Integer>(-1))), null);");
    gold.append("\n    s2im = new RxLazy<NtMaybe<Integer>>(this, () -> (NtMaybe<Integer>)(LibMath.signI(new NtMaybe<Integer>(0))), null);");
    gold.append("\n    s0lm = new RxLazy<NtMaybe<Integer>>(this, () -> (NtMaybe<Integer>)(LibMath.signL(new NtMaybe<Long>(1L))), null);");
    gold.append("\n    s1lm = new RxLazy<NtMaybe<Integer>>(this, () -> (NtMaybe<Integer>)(LibMath.signL(new NtMaybe<Long>(-1L))), null);");
    gold.append("\n    s2lm = new RxLazy<NtMaybe<Integer>>(this, () -> (NtMaybe<Integer>)(LibMath.signL(new NtMaybe<Long>(0L))), null);");
    gold.append("\n    sdmn = new RxLazy<NtMaybe<Integer>>(this, () -> (NtMaybe<Integer>)(LibMath.signD(new NtMaybe<Double>())), null);");
    gold.append("\n    simn = new RxLazy<NtMaybe<Integer>>(this, () -> (NtMaybe<Integer>)(LibMath.signI(new NtMaybe<Integer>())), null);");
    gold.append("\n    slmn = new RxLazy<NtMaybe<Integer>>(this, () -> (NtMaybe<Integer>)(LibMath.signL(new NtMaybe<Long>())), null);");
    gold.append("\n    gcd1 = new RxLazy<Integer>(this, () -> (Integer)(LibMath.gcd(20, 50)), null);");
    gold.append("\n    gcd2 = new RxLazy<Integer>(this, () -> (Integer)(LibMath.gcd(10, 13)), null);");
    gold.append("\n    gcd3 = new RxLazy<Integer>(this, () -> (Integer)(LibMath.gcd(10, 40)), null);");
    gold.append("\n    gcd4 = new RxLazy<Integer>(this, () -> (Integer)(LibMath.gcd(5, 25)), null);");
    gold.append("\n    h1 = new RxLazy<String>(this, () -> (String)(LibString.hexOf((100))), null);");
    gold.append("\n    h2 = new RxLazy<String>(this, () -> (String)(LibString.hexOf((100L))), null);");
    gold.append("\n    fh1 = new RxLazy<NtMaybe<Integer>>(this, () -> (NtMaybe<Integer>)(LibString.intFromHex(\"42FF\")), null);");
    gold.append("\n    fh2 = new RxLazy<NtMaybe<Long>>(this, () -> (NtMaybe<Long>)(LibString.longFromHex(\"42FF\")), null);");
    gold.append("\n    fh1b = new RxLazy<NtMaybe<Integer>>(this, () -> (NtMaybe<Integer>)(LibString.intFromHex(\"42FFX\")), null);");
    gold.append("\n    fh2b = new RxLazy<NtMaybe<Long>>(this, () -> (NtMaybe<Long>)(LibString.longFromHex(\"42FFX\")), null);");
    gold.append("\n    h1m = new RxLazy<NtMaybe<String>>(this, () -> (NtMaybe<String>)(LibString.hexOfI((new NtMaybe<Integer>(100)))), null);");
    gold.append("\n    h2m = new RxLazy<NtMaybe<String>>(this, () -> (NtMaybe<String>)(LibString.hexOfL((new NtMaybe<Long>(100L)))), null);");
    gold.append("\n    fh1m = new RxLazy<NtMaybe<Integer>>(this, () -> (NtMaybe<Integer>)(LibString.intFromHex((new NtMaybe<String>(\"4269\")))), null);");
    gold.append("\n    fh2m = new RxLazy<NtMaybe<Long>>(this, () -> (NtMaybe<Long>)(LibString.longFromHex((new NtMaybe<String>(\"4269\")))), null);");
    gold.append("\n    fh1bm = new RxLazy<NtMaybe<Integer>>(this, () -> (NtMaybe<Integer>)(LibString.intFromHex((new NtMaybe<String>(\"4269X\")))), null);");
    gold.append("\n    fh2bm = new RxLazy<NtMaybe<Long>>(this, () -> (NtMaybe<Long>)(LibString.longFromHex((new NtMaybe<String>(\"4269X\")))), null);");
    gold.append("\n    h1mn = new RxLazy<NtMaybe<String>>(this, () -> (NtMaybe<String>)(LibString.hexOfI((new NtMaybe<Integer>()))), null);");
    gold.append("\n    h2mn = new RxLazy<NtMaybe<String>>(this, () -> (NtMaybe<String>)(LibString.hexOfL((new NtMaybe<Long>()))), null);");
    gold.append("\n    __goodwillBudget = 100000;");
    gold.append("\n    __goodwillLimitOfBudget = 100000;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __settle(Set<Integer> __viewers) {");
    gold.append("\n    s0d.__settle(__viewers);");
    gold.append("\n    s1d.__settle(__viewers);");
    gold.append("\n    s2d.__settle(__viewers);");
    gold.append("\n    s0i.__settle(__viewers);");
    gold.append("\n    s1i.__settle(__viewers);");
    gold.append("\n    s2i.__settle(__viewers);");
    gold.append("\n    s0l.__settle(__viewers);");
    gold.append("\n    s1l.__settle(__viewers);");
    gold.append("\n    s2l.__settle(__viewers);");
    gold.append("\n    s0dm.__settle(__viewers);");
    gold.append("\n    s1dm.__settle(__viewers);");
    gold.append("\n    s2dm.__settle(__viewers);");
    gold.append("\n    s0im.__settle(__viewers);");
    gold.append("\n    s1im.__settle(__viewers);");
    gold.append("\n    s2im.__settle(__viewers);");
    gold.append("\n    s0lm.__settle(__viewers);");
    gold.append("\n    s1lm.__settle(__viewers);");
    gold.append("\n    s2lm.__settle(__viewers);");
    gold.append("\n    sdmn.__settle(__viewers);");
    gold.append("\n    simn.__settle(__viewers);");
    gold.append("\n    slmn.__settle(__viewers);");
    gold.append("\n    gcd1.__settle(__viewers);");
    gold.append("\n    gcd2.__settle(__viewers);");
    gold.append("\n    gcd3.__settle(__viewers);");
    gold.append("\n    gcd4.__settle(__viewers);");
    gold.append("\n    h1.__settle(__viewers);");
    gold.append("\n    h2.__settle(__viewers);");
    gold.append("\n    fh1.__settle(__viewers);");
    gold.append("\n    fh2.__settle(__viewers);");
    gold.append("\n    fh1b.__settle(__viewers);");
    gold.append("\n    fh2b.__settle(__viewers);");
    gold.append("\n    h1m.__settle(__viewers);");
    gold.append("\n    h2m.__settle(__viewers);");
    gold.append("\n    fh1m.__settle(__viewers);");
    gold.append("\n    fh2m.__settle(__viewers);");
    gold.append("\n    fh1bm.__settle(__viewers);");
    gold.append("\n    fh2bm.__settle(__viewers);");
    gold.append("\n    h1mn.__settle(__viewers);");
    gold.append("\n    h2mn.__settle(__viewers);");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __insert(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__insert(__reader);");
    gold.append("\n            __timezoneCachedZoneId = ZoneId.of(__timezone.get());");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__insert(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__enqueued\":");
    gold.append("\n            __hydrateEnqueuedTaskManager(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __patch(JsonStreamReader __reader) {");
    gold.append("\n    if (__reader.startObject()) {");
    gold.append("\n      while(__reader.notEndOfObject()) {");
    gold.append("\n        String __fieldName = __reader.fieldName();");
    gold.append("\n        switch (__fieldName) {");
    gold.append("\n          case \"__state\":");
    gold.append("\n            __state.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__constructed\":");
    gold.append("\n            __constructed.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__next_time\":");
    gold.append("\n            __next_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__last_expire_time\":");
    gold.append("\n            __last_expire_time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__blocked\":");
    gold.append("\n            __blocked.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__seq\":");
    gold.append("\n            __seq.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__entropy\":");
    gold.append("\n            __entropy.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_future_id\":");
    gold.append("\n            __auto_future_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__connection_id\":");
    gold.append("\n            __connection_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__message_id\":");
    gold.append("\n            __message_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__time\":");
    gold.append("\n            __time.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timezone\":");
    gold.append("\n            __timezone.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_table_row_id\":");
    gold.append("\n            __auto_table_row_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_gen\":");
    gold.append("\n            __auto_gen.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__auto_cache_id\":");
    gold.append("\n            __auto_cache_id.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__cache\":");
    gold.append("\n            __cache.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webTaskId\":");
    gold.append("\n            __webTaskId.__patch(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__dedupe\":");
    gold.append("\n            __hydrateDeduper(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__clients\":");
    gold.append("\n            __hydrateClients(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__messages\":");
    gold.append("\n            __hydrateMessages(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__enqueued\":");
    gold.append("\n            __hydrateEnqueuedTaskManager(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__webqueue\":");
    gold.append("\n            __hydrateWebQueue(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__timeouts\":");
    gold.append("\n            __hydrateTimeouts(__reader);");
    gold.append("\n            break;");
    gold.append("\n          case \"__replication\":");
    gold.append("\n            __hydrateReplicationEngine(__reader);");
    gold.append("\n            break;");
    gold.append("\n          default:");
    gold.append("\n            __reader.skipValue();");
    gold.append("\n        }");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __dump(JsonStreamWriter __writer) {");
    gold.append("\n    __writer.beginObject();");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__snapshot\");");
    gold.append("\n    __writer.writeString(__space + \"/\" + __key);__writer.writeObjectFieldIntro(\"__state\");");
    gold.append("\n    __state.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__constructed\");");
    gold.append("\n    __constructed.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__next_time\");");
    gold.append("\n    __next_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__last_expire_time\");");
    gold.append("\n    __last_expire_time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__blocked\");");
    gold.append("\n    __blocked.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__seq\");");
    gold.append("\n    __seq.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__entropy\");");
    gold.append("\n    __entropy.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_future_id\");");
    gold.append("\n    __auto_future_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__connection_id\");");
    gold.append("\n    __connection_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__message_id\");");
    gold.append("\n    __message_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__time\");");
    gold.append("\n    __time.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__timezone\");");
    gold.append("\n    __timezone.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_table_row_id\");");
    gold.append("\n    __auto_table_row_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_gen\");");
    gold.append("\n    __auto_gen.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__auto_cache_id\");");
    gold.append("\n    __auto_cache_id.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__cache\");");
    gold.append("\n    __cache.__dump(__writer);");
    gold.append("\n    __writer.writeObjectFieldIntro(\"__webTaskId\");");
    gold.append("\n    __webTaskId.__dump(__writer);");
    gold.append("\n    __dumpDeduper(__writer);");
    gold.append("\n    __dumpClients(__writer);");
    gold.append("\n    __dumpMessages(__writer);");
    gold.append("\n    __dumpEnqueuedTaskManager(__writer);");
    gold.append("\n    __dumpTimeouts(__writer);");
    gold.append("\n    __dumpWebQueue(__writer);");
    gold.append("\n    __dumpReplicationEngine(__writer);");
    gold.append("\n    __writer.endObject();");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __commit(String __name, JsonStreamWriter __forward, JsonStreamWriter __reverse) {");
    gold.append("\n    __state.__commit(\"__state\", __forward, __reverse);");
    gold.append("\n    __constructed.__commit(\"__constructed\", __forward, __reverse);");
    gold.append("\n    __next_time.__commit(\"__next_time\", __forward, __reverse);");
    gold.append("\n    __last_expire_time.__commit(\"__last_expire_time\", __forward, __reverse);");
    gold.append("\n    __blocked.__commit(\"__blocked\", __forward, __reverse);");
    gold.append("\n    __seq.__commit(\"__seq\", __forward, __reverse);");
    gold.append("\n    __entropy.__commit(\"__entropy\", __forward, __reverse);");
    gold.append("\n    __auto_future_id.__commit(\"__auto_future_id\", __forward, __reverse);");
    gold.append("\n    __connection_id.__commit(\"__connection_id\", __forward, __reverse);");
    gold.append("\n    __message_id.__commit(\"__message_id\", __forward, __reverse);");
    gold.append("\n    __time.__commit(\"__time\", __forward, __reverse);");
    gold.append("\n    __timezone.__commit(\"__timezone\", __forward, __reverse);");
    gold.append("\n    __auto_table_row_id.__commit(\"__auto_table_row_id\", __forward, __reverse);");
    gold.append("\n    __auto_gen.__commit(\"__auto_gen\", __forward, __reverse);");
    gold.append("\n    __auto_cache_id.__commit(\"__auto_cache_id\", __forward, __reverse);");
    gold.append("\n    __cache.__commit(\"__cache\", __forward, __reverse);");
    gold.append("\n    __webTaskId.__commit(\"__webTaskId\", __forward, __reverse);");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __revert() {");
    gold.append("\n    __state.__revert();");
    gold.append("\n    __constructed.__revert();");
    gold.append("\n    __next_time.__revert();");
    gold.append("\n    __last_expire_time.__revert();");
    gold.append("\n    __blocked.__revert();");
    gold.append("\n    __seq.__revert();");
    gold.append("\n    __entropy.__revert();");
    gold.append("\n    __auto_future_id.__revert();");
    gold.append("\n    __connection_id.__revert();");
    gold.append("\n    __message_id.__revert();");
    gold.append("\n    __time.__revert();");
    gold.append("\n    __timezone.__revert();");
    gold.append("\n    __auto_table_row_id.__revert();");
    gold.append("\n    __webTaskId.__revert();");
    gold.append("\n    /* root */");
    gold.append("\n  }");
    gold.append("\n  public class DeltaPrivacyCache {");
    gold.append("\n    public DeltaPrivacyCache(NtPrincipal __who) {}");
    gold.append("\n  }");
    gold.append("\n  private class DeltaSignAndHexWithGCD_1 implements DeltaNode {");
    gold.append("\n    private int __gs0d;");
    gold.append("\n    private DInt32 __ds0d;");
    gold.append("\n    private int __gs1d;");
    gold.append("\n    private DInt32 __ds1d;");
    gold.append("\n    private int __gs2d;");
    gold.append("\n    private DInt32 __ds2d;");
    gold.append("\n    private int __gs0i;");
    gold.append("\n    private DInt32 __ds0i;");
    gold.append("\n    private int __gs1i;");
    gold.append("\n    private DInt32 __ds1i;");
    gold.append("\n    private int __gs2i;");
    gold.append("\n    private DInt32 __ds2i;");
    gold.append("\n    private int __gs0l;");
    gold.append("\n    private DInt32 __ds0l;");
    gold.append("\n    private int __gs1l;");
    gold.append("\n    private DInt32 __ds1l;");
    gold.append("\n    private int __gs2l;");
    gold.append("\n    private DInt32 __ds2l;");
    gold.append("\n    private int __gs0dm;");
    gold.append("\n    private DMaybe<DInt32> __ds0dm;");
    gold.append("\n    private int __gs1dm;");
    gold.append("\n    private DMaybe<DInt32> __ds1dm;");
    gold.append("\n    private int __gs2dm;");
    gold.append("\n    private DMaybe<DInt32> __ds2dm;");
    gold.append("\n    private int __gs0im;");
    gold.append("\n    private DMaybe<DInt32> __ds0im;");
    gold.append("\n    private int __gs1im;");
    gold.append("\n    private DMaybe<DInt32> __ds1im;");
    gold.append("\n    private int __gs2im;");
    gold.append("\n    private DMaybe<DInt32> __ds2im;");
    gold.append("\n    private int __gs0lm;");
    gold.append("\n    private DMaybe<DInt32> __ds0lm;");
    gold.append("\n    private int __gs1lm;");
    gold.append("\n    private DMaybe<DInt32> __ds1lm;");
    gold.append("\n    private int __gs2lm;");
    gold.append("\n    private DMaybe<DInt32> __ds2lm;");
    gold.append("\n    private int __gsdmn;");
    gold.append("\n    private DMaybe<DInt32> __dsdmn;");
    gold.append("\n    private int __gsimn;");
    gold.append("\n    private DMaybe<DInt32> __dsimn;");
    gold.append("\n    private int __gslmn;");
    gold.append("\n    private DMaybe<DInt32> __dslmn;");
    gold.append("\n    private int __ggcd1;");
    gold.append("\n    private DInt32 __dgcd1;");
    gold.append("\n    private int __ggcd2;");
    gold.append("\n    private DInt32 __dgcd2;");
    gold.append("\n    private int __ggcd3;");
    gold.append("\n    private DInt32 __dgcd3;");
    gold.append("\n    private int __ggcd4;");
    gold.append("\n    private DInt32 __dgcd4;");
    gold.append("\n    private int __gh1;");
    gold.append("\n    private DString __dh1;");
    gold.append("\n    private int __gh2;");
    gold.append("\n    private DString __dh2;");
    gold.append("\n    private int __gfh1;");
    gold.append("\n    private DMaybe<DInt32> __dfh1;");
    gold.append("\n    private int __gfh2;");
    gold.append("\n    private DMaybe<DInt64> __dfh2;");
    gold.append("\n    private int __gfh1b;");
    gold.append("\n    private DMaybe<DInt32> __dfh1b;");
    gold.append("\n    private int __gfh2b;");
    gold.append("\n    private DMaybe<DInt64> __dfh2b;");
    gold.append("\n    private int __gh1m;");
    gold.append("\n    private DMaybe<DString> __dh1m;");
    gold.append("\n    private int __gh2m;");
    gold.append("\n    private DMaybe<DString> __dh2m;");
    gold.append("\n    private int __gfh1m;");
    gold.append("\n    private DMaybe<DInt32> __dfh1m;");
    gold.append("\n    private int __gfh2m;");
    gold.append("\n    private DMaybe<DInt64> __dfh2m;");
    gold.append("\n    private int __gfh1bm;");
    gold.append("\n    private DMaybe<DInt32> __dfh1bm;");
    gold.append("\n    private int __gfh2bm;");
    gold.append("\n    private DMaybe<DInt64> __dfh2bm;");
    gold.append("\n    private int __gh1mn;");
    gold.append("\n    private DMaybe<DString> __dh1mn;");
    gold.append("\n    private int __gh2mn;");
    gold.append("\n    private DMaybe<DString> __dh2mn;");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaSignAndHexWithGCD_1() {");
    gold.append("\n      __gs0d = -1;");
    gold.append("\n      __ds0d = new DInt32();");
    gold.append("\n      __gs1d = -1;");
    gold.append("\n      __ds1d = new DInt32();");
    gold.append("\n      __gs2d = -1;");
    gold.append("\n      __ds2d = new DInt32();");
    gold.append("\n      __gs0i = -1;");
    gold.append("\n      __ds0i = new DInt32();");
    gold.append("\n      __gs1i = -1;");
    gold.append("\n      __ds1i = new DInt32();");
    gold.append("\n      __gs2i = -1;");
    gold.append("\n      __ds2i = new DInt32();");
    gold.append("\n      __gs0l = -1;");
    gold.append("\n      __ds0l = new DInt32();");
    gold.append("\n      __gs1l = -1;");
    gold.append("\n      __ds1l = new DInt32();");
    gold.append("\n      __gs2l = -1;");
    gold.append("\n      __ds2l = new DInt32();");
    gold.append("\n      __gs0dm = -1;");
    gold.append("\n      __ds0dm = new DMaybe<DInt32>();");
    gold.append("\n      __gs1dm = -1;");
    gold.append("\n      __ds1dm = new DMaybe<DInt32>();");
    gold.append("\n      __gs2dm = -1;");
    gold.append("\n      __ds2dm = new DMaybe<DInt32>();");
    gold.append("\n      __gs0im = -1;");
    gold.append("\n      __ds0im = new DMaybe<DInt32>();");
    gold.append("\n      __gs1im = -1;");
    gold.append("\n      __ds1im = new DMaybe<DInt32>();");
    gold.append("\n      __gs2im = -1;");
    gold.append("\n      __ds2im = new DMaybe<DInt32>();");
    gold.append("\n      __gs0lm = -1;");
    gold.append("\n      __ds0lm = new DMaybe<DInt32>();");
    gold.append("\n      __gs1lm = -1;");
    gold.append("\n      __ds1lm = new DMaybe<DInt32>();");
    gold.append("\n      __gs2lm = -1;");
    gold.append("\n      __ds2lm = new DMaybe<DInt32>();");
    gold.append("\n      __gsdmn = -1;");
    gold.append("\n      __dsdmn = new DMaybe<DInt32>();");
    gold.append("\n      __gsimn = -1;");
    gold.append("\n      __dsimn = new DMaybe<DInt32>();");
    gold.append("\n      __gslmn = -1;");
    gold.append("\n      __dslmn = new DMaybe<DInt32>();");
    gold.append("\n      __ggcd1 = -1;");
    gold.append("\n      __dgcd1 = new DInt32();");
    gold.append("\n      __ggcd2 = -1;");
    gold.append("\n      __dgcd2 = new DInt32();");
    gold.append("\n      __ggcd3 = -1;");
    gold.append("\n      __dgcd3 = new DInt32();");
    gold.append("\n      __ggcd4 = -1;");
    gold.append("\n      __dgcd4 = new DInt32();");
    gold.append("\n      __gh1 = -1;");
    gold.append("\n      __dh1 = new DString();");
    gold.append("\n      __gh2 = -1;");
    gold.append("\n      __dh2 = new DString();");
    gold.append("\n      __gfh1 = -1;");
    gold.append("\n      __dfh1 = new DMaybe<DInt32>();");
    gold.append("\n      __gfh2 = -1;");
    gold.append("\n      __dfh2 = new DMaybe<DInt64>();");
    gold.append("\n      __gfh1b = -1;");
    gold.append("\n      __dfh1b = new DMaybe<DInt32>();");
    gold.append("\n      __gfh2b = -1;");
    gold.append("\n      __dfh2b = new DMaybe<DInt64>();");
    gold.append("\n      __gh1m = -1;");
    gold.append("\n      __dh1m = new DMaybe<DString>();");
    gold.append("\n      __gh2m = -1;");
    gold.append("\n      __dh2m = new DMaybe<DString>();");
    gold.append("\n      __gfh1m = -1;");
    gold.append("\n      __dfh1m = new DMaybe<DInt32>();");
    gold.append("\n      __gfh2m = -1;");
    gold.append("\n      __dfh2m = new DMaybe<DInt64>();");
    gold.append("\n      __gfh1bm = -1;");
    gold.append("\n      __dfh1bm = new DMaybe<DInt32>();");
    gold.append("\n      __gfh2bm = -1;");
    gold.append("\n      __dfh2bm = new DMaybe<DInt64>();");
    gold.append("\n      __gh1mn = -1;");
    gold.append("\n      __dh1mn = new DMaybe<DString>();");
    gold.append("\n      __gh2mn = -1;");
    gold.append("\n      __dh2mn = new DMaybe<DString>();");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      __sum += __ds0d.__memory();");
    gold.append("\n      __sum += __ds1d.__memory();");
    gold.append("\n      __sum += __ds2d.__memory();");
    gold.append("\n      __sum += __ds0i.__memory();");
    gold.append("\n      __sum += __ds1i.__memory();");
    gold.append("\n      __sum += __ds2i.__memory();");
    gold.append("\n      __sum += __ds0l.__memory();");
    gold.append("\n      __sum += __ds1l.__memory();");
    gold.append("\n      __sum += __ds2l.__memory();");
    gold.append("\n      __sum += __ds0dm.__memory();");
    gold.append("\n      __sum += __ds1dm.__memory();");
    gold.append("\n      __sum += __ds2dm.__memory();");
    gold.append("\n      __sum += __ds0im.__memory();");
    gold.append("\n      __sum += __ds1im.__memory();");
    gold.append("\n      __sum += __ds2im.__memory();");
    gold.append("\n      __sum += __ds0lm.__memory();");
    gold.append("\n      __sum += __ds1lm.__memory();");
    gold.append("\n      __sum += __ds2lm.__memory();");
    gold.append("\n      __sum += __dsdmn.__memory();");
    gold.append("\n      __sum += __dsimn.__memory();");
    gold.append("\n      __sum += __dslmn.__memory();");
    gold.append("\n      __sum += __dgcd1.__memory();");
    gold.append("\n      __sum += __dgcd2.__memory();");
    gold.append("\n      __sum += __dgcd3.__memory();");
    gold.append("\n      __sum += __dgcd4.__memory();");
    gold.append("\n      __sum += __dh1.__memory();");
    gold.append("\n      __sum += __dh2.__memory();");
    gold.append("\n      __sum += __dfh1.__memory();");
    gold.append("\n      __sum += __dfh2.__memory();");
    gold.append("\n      __sum += __dfh1b.__memory();");
    gold.append("\n      __sum += __dfh2b.__memory();");
    gold.append("\n      __sum += __dh1m.__memory();");
    gold.append("\n      __sum += __dh2m.__memory();");
    gold.append("\n      __sum += __dfh1m.__memory();");
    gold.append("\n      __sum += __dfh2m.__memory();");
    gold.append("\n      __sum += __dfh1bm.__memory();");
    gold.append("\n      __sum += __dfh2bm.__memory();");
    gold.append("\n      __sum += __dh1mn.__memory();");
    gold.append("\n      __sum += __dh2mn.__memory();");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public boolean show(SignAndHexWithGCD_1 __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      DeltaPrivacyCache __policy_cache = new DeltaPrivacyCache(__writer.who);");
    gold.append("\n      __writer.setCacheObject(__policy_cache);");
    gold.append("\n      __code_cost += 39;");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      __obj.manifest();");
    gold.append("\n      if (__gs0d != __item.s0d.getGeneration()) {");
    gold.append("\n        __ds0d.show(__item.s0d.get(), __obj.planField(\"s0d\"));");
    gold.append("\n        __gs0d = __item.s0d.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gs1d != __item.s1d.getGeneration()) {");
    gold.append("\n        __ds1d.show(__item.s1d.get(), __obj.planField(\"s1d\"));");
    gold.append("\n        __gs1d = __item.s1d.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gs2d != __item.s2d.getGeneration()) {");
    gold.append("\n        __ds2d.show(__item.s2d.get(), __obj.planField(\"s2d\"));");
    gold.append("\n        __gs2d = __item.s2d.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gs0i != __item.s0i.getGeneration()) {");
    gold.append("\n        __ds0i.show(__item.s0i.get(), __obj.planField(\"s0i\"));");
    gold.append("\n        __gs0i = __item.s0i.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gs1i != __item.s1i.getGeneration()) {");
    gold.append("\n        __ds1i.show(__item.s1i.get(), __obj.planField(\"s1i\"));");
    gold.append("\n        __gs1i = __item.s1i.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gs2i != __item.s2i.getGeneration()) {");
    gold.append("\n        __ds2i.show(__item.s2i.get(), __obj.planField(\"s2i\"));");
    gold.append("\n        __gs2i = __item.s2i.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gs0l != __item.s0l.getGeneration()) {");
    gold.append("\n        __ds0l.show(__item.s0l.get(), __obj.planField(\"s0l\"));");
    gold.append("\n        __gs0l = __item.s0l.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gs1l != __item.s1l.getGeneration()) {");
    gold.append("\n        __ds1l.show(__item.s1l.get(), __obj.planField(\"s1l\"));");
    gold.append("\n        __gs1l = __item.s1l.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gs2l != __item.s2l.getGeneration()) {");
    gold.append("\n        __ds2l.show(__item.s2l.get(), __obj.planField(\"s2l\"));");
    gold.append("\n        __gs2l = __item.s2l.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gs0dm != __item.s0dm.getGeneration()) {");
    gold.append("\n        if (__item.s0dm.get().has()) {");
    gold.append("\n          Integer __maybeElement0 = (Integer)(__item.s0dm.get().get());");
    gold.append("\n          DInt32 __maybeDeltaElement1 = __ds0dm.get(() -> new DInt32());");
    gold.append("\n          __maybeDeltaElement1.show(__maybeElement0, __obj.planField(\"s0dm\"));");
    gold.append("\n        } else {");
    gold.append("\n          __ds0dm.hide(__obj.planField(\"s0dm\"));");
    gold.append("\n        }");
    gold.append("\n        __gs0dm = __item.s0dm.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gs1dm != __item.s1dm.getGeneration()) {");
    gold.append("\n        if (__item.s1dm.get().has()) {");
    gold.append("\n          Integer __maybeElement2 = (Integer)(__item.s1dm.get().get());");
    gold.append("\n          DInt32 __maybeDeltaElement3 = __ds1dm.get(() -> new DInt32());");
    gold.append("\n          __maybeDeltaElement3.show(__maybeElement2, __obj.planField(\"s1dm\"));");
    gold.append("\n        } else {");
    gold.append("\n          __ds1dm.hide(__obj.planField(\"s1dm\"));");
    gold.append("\n        }");
    gold.append("\n        __gs1dm = __item.s1dm.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gs2dm != __item.s2dm.getGeneration()) {");
    gold.append("\n        if (__item.s2dm.get().has()) {");
    gold.append("\n          Integer __maybeElement4 = (Integer)(__item.s2dm.get().get());");
    gold.append("\n          DInt32 __maybeDeltaElement5 = __ds2dm.get(() -> new DInt32());");
    gold.append("\n          __maybeDeltaElement5.show(__maybeElement4, __obj.planField(\"s2dm\"));");
    gold.append("\n        } else {");
    gold.append("\n          __ds2dm.hide(__obj.planField(\"s2dm\"));");
    gold.append("\n        }");
    gold.append("\n        __gs2dm = __item.s2dm.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gs0im != __item.s0im.getGeneration()) {");
    gold.append("\n        if (__item.s0im.get().has()) {");
    gold.append("\n          Integer __maybeElement6 = (Integer)(__item.s0im.get().get());");
    gold.append("\n          DInt32 __maybeDeltaElement7 = __ds0im.get(() -> new DInt32());");
    gold.append("\n          __maybeDeltaElement7.show(__maybeElement6, __obj.planField(\"s0im\"));");
    gold.append("\n        } else {");
    gold.append("\n          __ds0im.hide(__obj.planField(\"s0im\"));");
    gold.append("\n        }");
    gold.append("\n        __gs0im = __item.s0im.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gs1im != __item.s1im.getGeneration()) {");
    gold.append("\n        if (__item.s1im.get().has()) {");
    gold.append("\n          Integer __maybeElement8 = (Integer)(__item.s1im.get().get());");
    gold.append("\n          DInt32 __maybeDeltaElement9 = __ds1im.get(() -> new DInt32());");
    gold.append("\n          __maybeDeltaElement9.show(__maybeElement8, __obj.planField(\"s1im\"));");
    gold.append("\n        } else {");
    gold.append("\n          __ds1im.hide(__obj.planField(\"s1im\"));");
    gold.append("\n        }");
    gold.append("\n        __gs1im = __item.s1im.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gs2im != __item.s2im.getGeneration()) {");
    gold.append("\n        if (__item.s2im.get().has()) {");
    gold.append("\n          Integer __maybeElement10 = (Integer)(__item.s2im.get().get());");
    gold.append("\n          DInt32 __maybeDeltaElement11 = __ds2im.get(() -> new DInt32());");
    gold.append("\n          __maybeDeltaElement11.show(__maybeElement10, __obj.planField(\"s2im\"));");
    gold.append("\n        } else {");
    gold.append("\n          __ds2im.hide(__obj.planField(\"s2im\"));");
    gold.append("\n        }");
    gold.append("\n        __gs2im = __item.s2im.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gs0lm != __item.s0lm.getGeneration()) {");
    gold.append("\n        if (__item.s0lm.get().has()) {");
    gold.append("\n          Integer __maybeElement12 = (Integer)(__item.s0lm.get().get());");
    gold.append("\n          DInt32 __maybeDeltaElement13 = __ds0lm.get(() -> new DInt32());");
    gold.append("\n          __maybeDeltaElement13.show(__maybeElement12, __obj.planField(\"s0lm\"));");
    gold.append("\n        } else {");
    gold.append("\n          __ds0lm.hide(__obj.planField(\"s0lm\"));");
    gold.append("\n        }");
    gold.append("\n        __gs0lm = __item.s0lm.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gs1lm != __item.s1lm.getGeneration()) {");
    gold.append("\n        if (__item.s1lm.get().has()) {");
    gold.append("\n          Integer __maybeElement14 = (Integer)(__item.s1lm.get().get());");
    gold.append("\n          DInt32 __maybeDeltaElement15 = __ds1lm.get(() -> new DInt32());");
    gold.append("\n          __maybeDeltaElement15.show(__maybeElement14, __obj.planField(\"s1lm\"));");
    gold.append("\n        } else {");
    gold.append("\n          __ds1lm.hide(__obj.planField(\"s1lm\"));");
    gold.append("\n        }");
    gold.append("\n        __gs1lm = __item.s1lm.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gs2lm != __item.s2lm.getGeneration()) {");
    gold.append("\n        if (__item.s2lm.get().has()) {");
    gold.append("\n          Integer __maybeElement16 = (Integer)(__item.s2lm.get().get());");
    gold.append("\n          DInt32 __maybeDeltaElement17 = __ds2lm.get(() -> new DInt32());");
    gold.append("\n          __maybeDeltaElement17.show(__maybeElement16, __obj.planField(\"s2lm\"));");
    gold.append("\n        } else {");
    gold.append("\n          __ds2lm.hide(__obj.planField(\"s2lm\"));");
    gold.append("\n        }");
    gold.append("\n        __gs2lm = __item.s2lm.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gsdmn != __item.sdmn.getGeneration()) {");
    gold.append("\n        if (__item.sdmn.get().has()) {");
    gold.append("\n          Integer __maybeElement18 = (Integer)(__item.sdmn.get().get());");
    gold.append("\n          DInt32 __maybeDeltaElement19 = __dsdmn.get(() -> new DInt32());");
    gold.append("\n          __maybeDeltaElement19.show(__maybeElement18, __obj.planField(\"sdmn\"));");
    gold.append("\n        } else {");
    gold.append("\n          __dsdmn.hide(__obj.planField(\"sdmn\"));");
    gold.append("\n        }");
    gold.append("\n        __gsdmn = __item.sdmn.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gsimn != __item.simn.getGeneration()) {");
    gold.append("\n        if (__item.simn.get().has()) {");
    gold.append("\n          Integer __maybeElement20 = (Integer)(__item.simn.get().get());");
    gold.append("\n          DInt32 __maybeDeltaElement21 = __dsimn.get(() -> new DInt32());");
    gold.append("\n          __maybeDeltaElement21.show(__maybeElement20, __obj.planField(\"simn\"));");
    gold.append("\n        } else {");
    gold.append("\n          __dsimn.hide(__obj.planField(\"simn\"));");
    gold.append("\n        }");
    gold.append("\n        __gsimn = __item.simn.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gslmn != __item.slmn.getGeneration()) {");
    gold.append("\n        if (__item.slmn.get().has()) {");
    gold.append("\n          Integer __maybeElement22 = (Integer)(__item.slmn.get().get());");
    gold.append("\n          DInt32 __maybeDeltaElement23 = __dslmn.get(() -> new DInt32());");
    gold.append("\n          __maybeDeltaElement23.show(__maybeElement22, __obj.planField(\"slmn\"));");
    gold.append("\n        } else {");
    gold.append("\n          __dslmn.hide(__obj.planField(\"slmn\"));");
    gold.append("\n        }");
    gold.append("\n        __gslmn = __item.slmn.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__ggcd1 != __item.gcd1.getGeneration()) {");
    gold.append("\n        __dgcd1.show(__item.gcd1.get(), __obj.planField(\"gcd1\"));");
    gold.append("\n        __ggcd1 = __item.gcd1.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__ggcd2 != __item.gcd2.getGeneration()) {");
    gold.append("\n        __dgcd2.show(__item.gcd2.get(), __obj.planField(\"gcd2\"));");
    gold.append("\n        __ggcd2 = __item.gcd2.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__ggcd3 != __item.gcd3.getGeneration()) {");
    gold.append("\n        __dgcd3.show(__item.gcd3.get(), __obj.planField(\"gcd3\"));");
    gold.append("\n        __ggcd3 = __item.gcd3.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__ggcd4 != __item.gcd4.getGeneration()) {");
    gold.append("\n        __dgcd4.show(__item.gcd4.get(), __obj.planField(\"gcd4\"));");
    gold.append("\n        __ggcd4 = __item.gcd4.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gh1 != __item.h1.getGeneration()) {");
    gold.append("\n        __dh1.show(__item.h1.get(), __obj.planField(\"h1\"));");
    gold.append("\n        __gh1 = __item.h1.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gh2 != __item.h2.getGeneration()) {");
    gold.append("\n        __dh2.show(__item.h2.get(), __obj.planField(\"h2\"));");
    gold.append("\n        __gh2 = __item.h2.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gfh1 != __item.fh1.getGeneration()) {");
    gold.append("\n        if (__item.fh1.get().has()) {");
    gold.append("\n          Integer __maybeElement24 = (Integer)(__item.fh1.get().get());");
    gold.append("\n          DInt32 __maybeDeltaElement25 = __dfh1.get(() -> new DInt32());");
    gold.append("\n          __maybeDeltaElement25.show(__maybeElement24, __obj.planField(\"fh1\"));");
    gold.append("\n        } else {");
    gold.append("\n          __dfh1.hide(__obj.planField(\"fh1\"));");
    gold.append("\n        }");
    gold.append("\n        __gfh1 = __item.fh1.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gfh2 != __item.fh2.getGeneration()) {");
    gold.append("\n        if (__item.fh2.get().has()) {");
    gold.append("\n          Long __maybeElement26 = (Long)(__item.fh2.get().get());");
    gold.append("\n          DInt64 __maybeDeltaElement27 = __dfh2.get(() -> new DInt64());");
    gold.append("\n          __maybeDeltaElement27.show(__maybeElement26, __obj.planField(\"fh2\"));");
    gold.append("\n        } else {");
    gold.append("\n          __dfh2.hide(__obj.planField(\"fh2\"));");
    gold.append("\n        }");
    gold.append("\n        __gfh2 = __item.fh2.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gfh1b != __item.fh1b.getGeneration()) {");
    gold.append("\n        if (__item.fh1b.get().has()) {");
    gold.append("\n          Integer __maybeElement28 = (Integer)(__item.fh1b.get().get());");
    gold.append("\n          DInt32 __maybeDeltaElement29 = __dfh1b.get(() -> new DInt32());");
    gold.append("\n          __maybeDeltaElement29.show(__maybeElement28, __obj.planField(\"fh1b\"));");
    gold.append("\n        } else {");
    gold.append("\n          __dfh1b.hide(__obj.planField(\"fh1b\"));");
    gold.append("\n        }");
    gold.append("\n        __gfh1b = __item.fh1b.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gfh2b != __item.fh2b.getGeneration()) {");
    gold.append("\n        if (__item.fh2b.get().has()) {");
    gold.append("\n          Long __maybeElement30 = (Long)(__item.fh2b.get().get());");
    gold.append("\n          DInt64 __maybeDeltaElement31 = __dfh2b.get(() -> new DInt64());");
    gold.append("\n          __maybeDeltaElement31.show(__maybeElement30, __obj.planField(\"fh2b\"));");
    gold.append("\n        } else {");
    gold.append("\n          __dfh2b.hide(__obj.planField(\"fh2b\"));");
    gold.append("\n        }");
    gold.append("\n        __gfh2b = __item.fh2b.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gh1m != __item.h1m.getGeneration()) {");
    gold.append("\n        if (__item.h1m.get().has()) {");
    gold.append("\n          String __maybeElement32 = (String)(__item.h1m.get().get());");
    gold.append("\n          DString __maybeDeltaElement33 = __dh1m.get(() -> new DString());");
    gold.append("\n          __maybeDeltaElement33.show(__maybeElement32, __obj.planField(\"h1m\"));");
    gold.append("\n        } else {");
    gold.append("\n          __dh1m.hide(__obj.planField(\"h1m\"));");
    gold.append("\n        }");
    gold.append("\n        __gh1m = __item.h1m.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gh2m != __item.h2m.getGeneration()) {");
    gold.append("\n        if (__item.h2m.get().has()) {");
    gold.append("\n          String __maybeElement34 = (String)(__item.h2m.get().get());");
    gold.append("\n          DString __maybeDeltaElement35 = __dh2m.get(() -> new DString());");
    gold.append("\n          __maybeDeltaElement35.show(__maybeElement34, __obj.planField(\"h2m\"));");
    gold.append("\n        } else {");
    gold.append("\n          __dh2m.hide(__obj.planField(\"h2m\"));");
    gold.append("\n        }");
    gold.append("\n        __gh2m = __item.h2m.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gfh1m != __item.fh1m.getGeneration()) {");
    gold.append("\n        if (__item.fh1m.get().has()) {");
    gold.append("\n          Integer __maybeElement36 = (Integer)(__item.fh1m.get().get());");
    gold.append("\n          DInt32 __maybeDeltaElement37 = __dfh1m.get(() -> new DInt32());");
    gold.append("\n          __maybeDeltaElement37.show(__maybeElement36, __obj.planField(\"fh1m\"));");
    gold.append("\n        } else {");
    gold.append("\n          __dfh1m.hide(__obj.planField(\"fh1m\"));");
    gold.append("\n        }");
    gold.append("\n        __gfh1m = __item.fh1m.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gfh2m != __item.fh2m.getGeneration()) {");
    gold.append("\n        if (__item.fh2m.get().has()) {");
    gold.append("\n          Long __maybeElement38 = (Long)(__item.fh2m.get().get());");
    gold.append("\n          DInt64 __maybeDeltaElement39 = __dfh2m.get(() -> new DInt64());");
    gold.append("\n          __maybeDeltaElement39.show(__maybeElement38, __obj.planField(\"fh2m\"));");
    gold.append("\n        } else {");
    gold.append("\n          __dfh2m.hide(__obj.planField(\"fh2m\"));");
    gold.append("\n        }");
    gold.append("\n        __gfh2m = __item.fh2m.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gfh1bm != __item.fh1bm.getGeneration()) {");
    gold.append("\n        if (__item.fh1bm.get().has()) {");
    gold.append("\n          Integer __maybeElement40 = (Integer)(__item.fh1bm.get().get());");
    gold.append("\n          DInt32 __maybeDeltaElement41 = __dfh1bm.get(() -> new DInt32());");
    gold.append("\n          __maybeDeltaElement41.show(__maybeElement40, __obj.planField(\"fh1bm\"));");
    gold.append("\n        } else {");
    gold.append("\n          __dfh1bm.hide(__obj.planField(\"fh1bm\"));");
    gold.append("\n        }");
    gold.append("\n        __gfh1bm = __item.fh1bm.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gfh2bm != __item.fh2bm.getGeneration()) {");
    gold.append("\n        if (__item.fh2bm.get().has()) {");
    gold.append("\n          Long __maybeElement42 = (Long)(__item.fh2bm.get().get());");
    gold.append("\n          DInt64 __maybeDeltaElement43 = __dfh2bm.get(() -> new DInt64());");
    gold.append("\n          __maybeDeltaElement43.show(__maybeElement42, __obj.planField(\"fh2bm\"));");
    gold.append("\n        } else {");
    gold.append("\n          __dfh2bm.hide(__obj.planField(\"fh2bm\"));");
    gold.append("\n        }");
    gold.append("\n        __gfh2bm = __item.fh2bm.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gh1mn != __item.h1mn.getGeneration()) {");
    gold.append("\n        if (__item.h1mn.get().has()) {");
    gold.append("\n          String __maybeElement44 = (String)(__item.h1mn.get().get());");
    gold.append("\n          DString __maybeDeltaElement45 = __dh1mn.get(() -> new DString());");
    gold.append("\n          __maybeDeltaElement45.show(__maybeElement44, __obj.planField(\"h1mn\"));");
    gold.append("\n        } else {");
    gold.append("\n          __dh1mn.hide(__obj.planField(\"h1mn\"));");
    gold.append("\n        }");
    gold.append("\n        __gh1mn = __item.h1mn.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__gh2mn != __item.h2mn.getGeneration()) {");
    gold.append("\n        if (__item.h2mn.get().has()) {");
    gold.append("\n          String __maybeElement46 = (String)(__item.h2mn.get().get());");
    gold.append("\n          DString __maybeDeltaElement47 = __dh2mn.get(() -> new DString());");
    gold.append("\n          __maybeDeltaElement47.show(__maybeElement46, __obj.planField(\"h2mn\"));");
    gold.append("\n        } else {");
    gold.append("\n          __dh2mn.hide(__obj.planField(\"h2mn\"));");
    gold.append("\n        }");
    gold.append("\n        __gh2mn = __item.h2mn.getGeneration();");
    gold.append("\n      }");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n      return true;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __ds0d.clear();");
    gold.append("\n      __ds1d.clear();");
    gold.append("\n      __ds2d.clear();");
    gold.append("\n      __ds0i.clear();");
    gold.append("\n      __ds1i.clear();");
    gold.append("\n      __ds2i.clear();");
    gold.append("\n      __ds0l.clear();");
    gold.append("\n      __ds1l.clear();");
    gold.append("\n      __ds2l.clear();");
    gold.append("\n      __ds0dm.clear();");
    gold.append("\n      __ds1dm.clear();");
    gold.append("\n      __ds2dm.clear();");
    gold.append("\n      __ds0im.clear();");
    gold.append("\n      __ds1im.clear();");
    gold.append("\n      __ds2im.clear();");
    gold.append("\n      __ds0lm.clear();");
    gold.append("\n      __ds1lm.clear();");
    gold.append("\n      __ds2lm.clear();");
    gold.append("\n      __dsdmn.clear();");
    gold.append("\n      __dsimn.clear();");
    gold.append("\n      __dslmn.clear();");
    gold.append("\n      __dgcd1.clear();");
    gold.append("\n      __dgcd2.clear();");
    gold.append("\n      __dgcd3.clear();");
    gold.append("\n      __dgcd4.clear();");
    gold.append("\n      __dh1.clear();");
    gold.append("\n      __dh2.clear();");
    gold.append("\n      __dfh1.clear();");
    gold.append("\n      __dfh2.clear();");
    gold.append("\n      __dfh1b.clear();");
    gold.append("\n      __dfh2b.clear();");
    gold.append("\n      __dh1m.clear();");
    gold.append("\n      __dh2m.clear();");
    gold.append("\n      __dfh1m.clear();");
    gold.append("\n      __dfh2m.clear();");
    gold.append("\n      __dfh1bm.clear();");
    gold.append("\n      __dfh2bm.clear();");
    gold.append("\n      __dh1mn.clear();");
    gold.append("\n      __dh2mn.clear();");
    gold.append("\n      __code_cost += 39;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public Set<String> __get_intern_strings() {");
    gold.append("\n    HashSet<String> __interns = new HashSet<>();");
    gold.append("\n    __interns.add(\"\");");
    gold.append("\n    __interns.add(\"?\");");
    gold.append("\n    return __interns;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public PrivateView __createPrivateView(NtPrincipal __who, Perspective ___perspective, AssetIdEncoder __encoder) {");
    gold.append("\n    SignAndHexWithGCD_1 __self = this;");
    gold.append("\n    DeltaSignAndHexWithGCD_1 __state = new DeltaSignAndHexWithGCD_1();");
    gold.append("\n    RTx__ViewerType __viewerState = new RTx__ViewerType();");
    gold.append("\n    int __viewId = __genViewId();");
    gold.append("\n    return new PrivateView(__viewId, __who, ___perspective, __encoder) {");
    gold.append("\n      @Override");
    gold.append("\n      public long memory() {");
    gold.append("\n        return __state.__memory();");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void dumpViewer(JsonStreamWriter __writer) {");
    gold.append("\n        __viewerState.__writeOut(__writer);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void ingest(JsonStreamReader __reader) {");
    gold.append("\n        __viewerState.__ingest(__reader);");
    gold.append("\n      }");
    gold.append("\n      @Override");
    gold.append("\n      public void update(JsonStreamWriter __writer) {");
    gold.append("\n        __state.show(__self, PrivateLazyDeltaWriter.bind(__who, __writer, __viewerState, __encoder, __viewId));");
    gold.append("\n      }");
    gold.append("\n    };");
    gold.append("\n  }");
    gold.append("\n  private static class RTx__ViewerType extends NtMessageBase {");
    gold.append("\n    private final RTx__ViewerType __this;");
    gold.append("\n    public void __hash(HashBuilder __hash) {");
    gold.append("\n      __hash.hashString(\"anonymous\");");
    gold.append("\n    }");
    gold.append("\n    private static String[] __INDEX_COLUMNS___ViewerType = new String[] {};");
    gold.append("\n    @Override");
    gold.append("\n    public String[] __getIndexColumns() {");
    gold.append("\n      return __INDEX_COLUMNS___ViewerType;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public int[] __getIndexValues() {");
    gold.append("\n      return new int[] {};");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType(JsonStreamReader __reader) {");
    gold.append("\n      __this = this;");
    gold.append("\n      __ingest(__reader);");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __ingest(JsonStreamReader __reader) {");
    gold.append("\n      __reader.mustSkipObject();");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void __writeOut(JsonStreamWriter __writer) {");
    gold.append("\n      __writer.beginObject();");
    gold.append("\n      __writer.endObject();");
    gold.append("\n    }");
    gold.append("\n    private RTx__ViewerType() { __this = this; }");
    gold.append("\n  }");
    gold.append("\n  private class DeltaRTx__ViewerType implements DeltaNode {");
    gold.append("\n    private boolean __emitted;");
    gold.append("\n    private DeltaRTx__ViewerType() {");
    gold.append("\n      __emitted = false;");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public long __memory() {");
    gold.append("\n      long __sum = 40;");
    gold.append("\n      return __sum;");
    gold.append("\n    }");
    gold.append("\n    public void show(RTx__ViewerType __item, PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      PrivateLazyDeltaWriter __obj = __writer.planObject();");
    gold.append("\n      if (__obj.end()) {");
    gold.append("\n        __emitted = true;");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n    @Override");
    gold.append("\n    public void clear() {");
    gold.append("\n      __code_cost += 0;");
    gold.append("\n    }");
    gold.append("\n    public void hide(PrivateLazyDeltaWriter __writer) {");
    gold.append("\n      if (__emitted) {");
    gold.append("\n        clear();");
    gold.append("\n        __emitted = false;");
    gold.append("\n        __writer.writeNull();");
    gold.append("\n      }");
    gold.append("\n    }");
    gold.append("\n  }");
    gold.append("\n  public static HashMap<String, HashMap<String, Object>> __services() {");
    gold.append("\n    HashMap<String, HashMap<String, Object>> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __link(ServiceRegistry __registry) {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __executeServiceCalls(boolean cancel) {}");
    gold.append("\n  @Override");
    gold.append("\n  public String __getViewStateFilter() {");
    gold.append("\n    return \"[]\";");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected boolean __is_direct_channel(String channel) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __handle_direct(CoreRequestContext context, String channel, Object __message) throws AbortMessageException {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __route(AsyncTask task) {");
    gold.append("\n    return;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected Object __parse_message(String channel, JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __reset_future_queues() {");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __bindReplication() {}");
    gold.append("\n  @Override");
    gold.append("\n  public String __metrics() { return \"{}\"; }");
    gold.append("\n  @Override");
    gold.append("\n  public void __debug(JsonStreamWriter __writer) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __open_channel(String name) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String __auth(CoreRequestContext __context, String username, String password) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  public AuthResponse __authpipe(CoreRequestContext __context, String __message) {");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __password(CoreRequestContext __context, String __pw) {}");
    gold.append("\n  @Override");
    gold.append("\n  public void __make_cron_progress() {}");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __get_internal(CoreRequestContext __context, WebGet __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __put_internal(CoreRequestContext __context, WebPut __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected WebResponse __delete_internal(CoreRequestContext __context, WebDelete __request) throws AbortMessageException {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public WebResponse __options(CoreRequestContext __context, WebGet __request) {");
    gold.append("\n    WebPath __path = new WebPath(__request.uri);");
    gold.append("\n    return null;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  protected void __invoke_label(String __new_state) {}");
    gold.append("\n  public static boolean __onCanCreate(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanInvent(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  public static boolean __onCanSendWhileDisconnected(CoreRequestContext __context) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onLoad() {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onCanAssetAttached(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onAssetAttached(CoreRequestContext __cvalue, NtAsset __pvalue) {}");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __delete(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public boolean __onConnected(CoreRequestContext __cvalue) {");
    gold.append("\n    return false;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __onDisconnected(CoreRequestContext __cvalue) {}");
    gold.append("\n  public static HashMap<String, Object> __config() {");
    gold.append("\n    HashMap<String, Object> __map = new HashMap<>();");
    gold.append("\n    return __map;");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public String[] __getTests() {");
    gold.append("\n    return new String[] {};");
    gold.append("\n  }");
    gold.append("\n  @Override");
    gold.append("\n  public void __test(TestReportBuilder report, String testName) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected void __construct_intern(CoreRequestContext _c, NtMessageBase _m) {}");
    gold.append("\n  @Override");
    gold.append("\n  protected NtMessageBase __parse_construct_arg(JsonStreamReader __reader) {");
    gold.append("\n    __reader.skipValue();");
    gold.append("\n    return NtMessageBase.NULL;");
    gold.append("\n  }");
    gold.append("\n  /* end of file */");
    gold.append("\n}");
    gold.append("\n");
    gold.append("\n--=[LivingDocumentFactory COMPILING]=---");
    gold.append("\n--=[LivingDocumentFactory MADE]=---");
    gold.append("\n--REFLECTION RESULTS-------------------------------------");
    gold.append("\n{\"types\":{\"__Root\":{\"nature\":\"reactive_record\",\"name\":\"Root\",\"fields\":{\"s0d\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"s1d\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"s2d\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"s0i\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"s1i\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"s2i\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"s0l\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"s1l\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"s2l\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"s0dm\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"int\"}},\"privacy\":\"public\"},\"s1dm\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"int\"}},\"privacy\":\"public\"},\"s2dm\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"int\"}},\"privacy\":\"public\"},\"s0im\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"int\"}},\"privacy\":\"public\"},\"s1im\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"int\"}},\"privacy\":\"public\"},\"s2im\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"int\"}},\"privacy\":\"public\"},\"s0lm\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"int\"}},\"privacy\":\"public\"},\"s1lm\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"int\"}},\"privacy\":\"public\"},\"s2lm\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"int\"}},\"privacy\":\"public\"},\"sdmn\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"int\"}},\"privacy\":\"public\"},\"simn\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"int\"}},\"privacy\":\"public\"},\"slmn\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"int\"}},\"privacy\":\"public\"},\"gcd1\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"gcd2\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"gcd3\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"gcd4\":{\"type\":{\"nature\":\"native_value\",\"type\":\"int\"},\"privacy\":\"public\"},\"h1\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"h2\":{\"type\":{\"nature\":\"native_value\",\"type\":\"string\"},\"privacy\":\"public\"},\"fh1\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"int\"}},\"privacy\":\"public\"},\"fh2\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"long\"}},\"privacy\":\"public\"},\"fh1b\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"int\"}},\"privacy\":\"public\"},\"fh2b\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"long\"}},\"privacy\":\"public\"},\"h1m\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"string\"}},\"privacy\":\"public\"},\"h2m\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"string\"}},\"privacy\":\"public\"},\"fh1m\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"int\"}},\"privacy\":\"public\"},\"fh2m\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"long\"}},\"privacy\":\"public\"},\"fh1bm\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"int\"}},\"privacy\":\"public\"},\"fh2bm\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"long\"}},\"privacy\":\"public\"},\"h1mn\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"string\"}},\"privacy\":\"public\"},\"h2mn\":{\"type\":{\"nature\":\"native_maybe\",\"type\":{\"nature\":\"native_value\",\"type\":\"string\"}},\"privacy\":\"public\"}}},\"__ViewerType\":{\"nature\":\"native_message\",\"name\":\"__ViewerType\",\"anonymous\":true,\"fields\":{}}},\"channels\":{},\"channels-privacy\":{},\"constructors\":[],\"labels\":[]}");
    gold.append("\n--JAVA RUNNING-------------------------------------");
    gold.append("\n{\"command\":\"construct\",\"timestamp\":\"0\",\"who\":{\"agent\":\"?\",\"authority\":\"?\"},\"arg\":{},\"entropy\":\"0\",\"key\":\"0\",\"origin\":\"origin\",\"ip\":\"ip\"}-->{\"__constructed\":true,\"__entropy\":\"-4962768465676381896\",\"__messages\":null,\"__seq\":1} need:false in:0");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"25\"}-->{\"__messages\":null,\"__seq\":2,\"__entropy\":\"4804307197456638271\",\"__time\":\"25\"} need:false in:0");
    gold.append("\nCPU:0");
    gold.append("\nMEMORY:1944");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"50\"}-->{\"__messages\":null,\"__seq\":3,\"__entropy\":\"-1034601897293430941\",\"__time\":\"50\"} need:false in:0");
    gold.append("\nNO_ONE: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"data\":{\"s0d\":1,\"s1d\":-1,\"s2d\":0,\"s0i\":1,\"s1i\":-1,\"s2i\":0,\"s0l\":1,\"s1l\":-1,\"s2l\":0,\"s0dm\":1,\"s1dm\":-1,\"s2dm\":0,\"s0im\":1,\"s1im\":-1,\"s2im\":0,\"s0lm\":1,\"s1lm\":-1,\"s2lm\":0,\"gcd1\":10,\"gcd2\":1,\"gcd3\":10,\"gcd4\":5,\"h1\":\"64\",\"h2\":\"64\",\"fh1\":17151,\"fh2\":\"17151\",\"h1m\":\"64\",\"h2m\":\"64\",\"fh1m\":17001,\"fh2m\":\"17001\"},\"seq\":3}");
    gold.append("\nNO_ONE|FAILURE:184333");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"75\"}-->{\"__messages\":null,\"__seq\":4,\"__entropy\":\"7848011421992302230\",\"__time\":\"75\"} need:false in:0");
    gold.append("\nRANDO: CREATED PRIVATE VIEW");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":4}");
    gold.append("\n+ RANDO DELTA:{\"data\":{\"s0d\":1,\"s1d\":-1,\"s2d\":0,\"s0i\":1,\"s1i\":-1,\"s2i\":0,\"s0l\":1,\"s1l\":-1,\"s2l\":0,\"s0dm\":1,\"s1dm\":-1,\"s2dm\":0,\"s0im\":1,\"s1im\":-1,\"s2im\":0,\"s0lm\":1,\"s1lm\":-1,\"s2lm\":0,\"gcd1\":10,\"gcd2\":1,\"gcd3\":10,\"gcd4\":5,\"h1\":\"64\",\"h2\":\"64\",\"fh1\":17151,\"fh2\":\"17151\",\"h1m\":\"64\",\"h2m\":\"64\",\"fh1m\":17001,\"fh2m\":\"17001\"},\"seq\":4}");
    gold.append("\nRANDO|FAILURE:184333");
    gold.append("\n{\"command\":\"invalidate\",\"timestamp\":\"100\"}-->{\"__messages\":null,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__time\":\"100\"} need:false in:0");
    gold.append("\nRANDO|SUCCESS:5");
    gold.append("\n+ NO_ONE DELTA:{\"seq\":5}");
    gold.append("\n+ RANDO DELTA:{\"seq\":5}");
    gold.append("\nMEMORY:6414");
    gold.append("\n--JAVA RESULTS-------------------------------------");
    gold.append("\n{\"__snapshot\":\"0/0\",\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--DUMP RESULTS-------------------------------------");
    gold.append("\n{}");
    gold.append("\n--METRIC RESULTS-----------------------------------");
    gold.append("\n{\"__snapshot\":\"0/0\",\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n{\"__snapshot\":\"0/0\",\"__state\":\"\",\"__constructed\":true,\"__next_time\":\"0\",\"__last_expire_time\":\"0\",\"__blocked\":false,\"__seq\":5,\"__entropy\":\"-8929183248358367000\",\"__auto_future_id\":0,\"__connection_id\":0,\"__message_id\":0,\"__time\":\"100\",\"__timezone\":\"UTC\",\"__auto_table_row_id\":0,\"__auto_gen\":0,\"__auto_cache_id\":0,\"__cache\":{},\"__webTaskId\":0,\"__webqueue\":{},\"__replication\":{}}");
    gold.append("\n--JAVA TEST RESULTS--------------------------------");
    gold.append("\n");
    gold.append("\nSuccess");
    assertStable(live, gold);
  }
}
